@model List<ConstructionApplication.ViewModels.DailyAttendance.DailyAttendanceVm>

<h3 style="text-align: center;">Attendance Report</h3>
<div class="bottom-section">
    <a href="https://localhost:7212/DailyAttendance/Add">Add New Daily Attendance</a>
    &nbsp;&nbsp;&nbsp;
    <a href="https://localhost:7212/DailyAttendance/AddUsingAjax">Add New Daily (Attendance Using AJAX)</a>
</div>
<html>
<head>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px auto;
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        tr {
            background-color: lightblue;
        }

        td {
            padding: 8px 10px;
            text-align: center;
            border: 1px solid #ddd;
        }

        .header-row {
            background-color: #007bff;
            color: white;
            font-size: 15px;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: #e6f7ff;
        }

        .bottom-section {
            margin-top: 20px;
            text-align: right;
            font-size: 20px;
        }

        #errorMessage {
            color: red;
            font-weight: bold;
            margin-top: 10px;
        }

        .no-record {
            background-color: lightblue;
            text-align: center;
            padding: 15px;
            font-size: 18px;
            border-radius: 10px;
            margin: 20px auto;
            width: 50%;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
            color: white;
            padding: 8px 15px;
            border-radius: 5px;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }
    </style>
</head>
    <body>
        <form method="get" asp-action="Index" onsubmit="return validateDates()">
            <label><b>From:</b></label>
            <input type="date" name="DateFrom" value="@ViewBag.DateFrom"/>
            &nbsp;&nbsp;&nbsp;
            <label><b>To:</b></label>
            <input type="date" name="DateTo" value="@ViewBag.DateTo" />
            &nbsp;&nbsp;&nbsp;
            <button type="submit" class="btn btn-primary">Go</button>
        </form>
        <span id="errorMessage" class="text-danger"></span>
        @if (Model != null && Model.Count > 0)
        {
            <table>
                <tr class="header-row">
                    <td><b>Date</b></td>
                    <td><b>Total Count(Master Mason + Labour)</b></td>
                    <td><b>Total Master Mason Amount</b></td>
                    <td><b>Total Labour Amount</b></td>
                    <td><b>Total Amount</b></td>
                </tr>

                @foreach (ConstructionApplication.ViewModels.DailyAttendance.DailyAttendanceVm dailyAttendanceVm in Model)
                {
                    <tr class="table1">
                        <td>@dailyAttendanceVm.Date.ToString("dd-MMMM-yyyy")</td>
                        <td>@dailyAttendanceVm.TotalCount<i>(@dailyAttendanceVm.TotalMasterMason + @dailyAttendanceVm.TotalLabour)</i></td>
                        <td>@dailyAttendanceVm.MasterMasonAmount</td>
                        <td>@dailyAttendanceVm.LabourAmount</td>
                        <td>@dailyAttendanceVm.TotalAmount</td>
                    </tr>
                }
            </table>
        }
        else
        {
            <div class="no-record">
                <b>No Record Found</b>
            </div>
        }
        
        <script>
        function validateDates() {
            // Get the date values
            var dateFrom = document.getElementById("DateFrom").value;
            var dateTo = document.getElementById("DateTo").value;
            var errorMessage = document.getElementById("errorMessage");
            errorMessage.innerHTML = "";

            // Convert date strings to Date objects
            var currentDate = new Date().toISOString().split('T')[0];
            var fromDate = dateFrom ? new Date(dateFrom) : null;
            var toDate = dateTo ? new Date(dateTo) : null;

            // Check if DateFrom is greater than DateTo (when both are provided)
            if (fromDate && toDate && fromDate > toDate) {
                errorMessage.innerHTML = "FROM DATE cannot be greater than TO DATE.";
                return false;
            }

            // Check both DateFrom and DateTo is in the future
            if (dateTo && dateFrom > currentDate || dateFrom && dateTo > currentDate) {
                errorMessage.innerHTML = "FROM DATE and TO DATE cannot be in the future.";
                return false;
            }
            return true;
        }
        </script>
    </body>
</html>