@model ConstructionApplication.ViewModels.ContractorVm

<h3 class="text-center mb-4">Contractor Update</h3>
<div class="row">
    <div class="col-md-8">
        <form asp-action="Update" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <input type="hidden" id="ContractorId" name="ContractorId" value="@Model.ContractorId">

            <div class="form-group mb-3" style="width: 20%;">
                <label for="ContractorName"><b>Contractor Name</b></label>
                <input type="text" id="ContractorName" name="ContractorName" value="@Model.ContractorName" 
                       maxlength="15" class="form-control" required />
            </div>

            <div class="form-group mb-3" style="width: 20%;">
                <label for="JobCategoryId" class="control-label"><b>Job Category</b></label>
                @Html.DropDownListFor(model => model.JobCategoryId, ViewBag.JobCategory as SelectList, "-- SELECT --", new { @class = "form-control" })
                <span asp-validation-for="JobCategoryId" class="text-danger"></span>
            </div>

            <div class="form-group mb-3" style="width: 20%;">
                <label for="Gender"><b>Gender</b></label><br />
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input" })
                    <label class="form-check-label">Male</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input" })
                    <label class="form-check-label">Female</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Transgender", new { @class = "form-check-input" })
                    <label class="form-check-label">Transgender</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Others", new { @class = "form-check-input" })
                    <label class="form-check-label">Others</label>
                </div>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>

            <div class="form-group mb-3" style="width: 20%;">
                <label for="DOB"><b>DOB</b></label>
                <input type="text" id="DOB" name="DOB" value="@Model.DOB" class="form-control" />
            </div>

            <div class="form-group mb-3" style="width: 20%;">
                <label for="MobileNumber"><b>Mobile Number</b></label>
                <input type="text" id="MobileNumber" name="MobileNumber" value="@Model.MobileNumber" 
                       maxlength="10" minlength="10" class="form-control" required />
            </div>

            <div class="form-group" style="width: 20%;">
                <label asp-for="ReferredBy" class="control-label"><b>Referred By</b></label>
                <input asp-for="ReferredBy" maxlength="15" minlength="3" class="form-control" required />
                <span asp-validation-for="ReferredBy" class="text-danger"></span>
            </div>
            <br />
            <button type="button" id="btnToggleAddressButton" class="btn btn-secondary mb-3" onclick="toggleAddressFields()">Tap for Address</button>

            <!-- Hidden Address Fields -->
            <div id="dvAddressFields" style="display: none;">
                <div class="form-group mb-3" style="width: 20%;">
                    <label asp-for="AddressTypeId" class="control-label"><b>Address Type</b></label>
                    @Html.DropDownListFor(model => model.AddressTypeId, ViewBag.AddressTypes as SelectList, "-- Select --", new { @class = "form-control" })
                    <span asp-validation-for="AddressTypeId" class="text-danger"></span>
                </div>

                <div class="form-group mb-3" style="width: 20%;">
                    <label asp-for="CountryId" class="control-label"><b>Country Name</b></label>
                    @Html.DropDownListFor(model => model.CountryId, ViewBag.Countries as SelectList, "-- Select --", new { @class = "form-control" })
                    <span asp-validation-for="CountryId" class="text-danger"></span>
                </div>

                <div class="form-group mb-3" style="width: 40%;">
                    <label for="AddressLine1" class="control-label"><b>Address</b></label>
                    <textarea id="AddressLine1" name="AddressLine1" class="form-control">@Model.AddressLine1</textarea>
                </div>

                <div class="form-group mb-3" style="width: 20%;">
                    <label for="PinCode" class="control-label"><b>Pin Code</b></label>
                    <input type="text" id="PinCode" name="PinCode" value="@Model.PinCode" class="form-control" />
                    <span asp-validation-for="PinCode" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
                &nbsp;&nbsp;&nbsp;
                <input type="submit" value="Cancel" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>
    function toggleAddressFields() {
        const addressFields = document.getElementById("dvAddressFields");
        const button = document.getElementById("btnToggleAddressButton");

        if (addressFields.style.display === "none") {
            addressFields.style.display = "block";
            button.textContent = "Tap to Hide Address";
        } else {
            addressFields.style.display = "none";
            button.textContent = "Tap for Address";
        }
    }
</script>
