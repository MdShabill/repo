@model ConstructEase.WebApp.ViewModels.SiteVm


<h3 class="text-center my-4 fw-bold">Add Site</h3>

<div class="row justify-content-center">
    <div class="col-md-6">
        <form asp-action="Add" method="post" class="border p-4 rounded shadow bg-light">
            <div class="form-group mb-6">
                <label asp-for="StartedDate" class="form-label fw-bold">Created Date</label>
                <input asp-for="StartedDate" class="form-control" type="date" />
                <span asp-validation-for="StartedDate" class="text-danger"></span>
            </div>

            <div class="form-group mb-6">
                <label asp-for="Name" class="form-label fw-bold">Site Name</label>
                <input asp-for="Name" class="form-control" placeholder="Enter site name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mb-6">
                <label asp-for="SiteStatusId" class="control-label"><b>Site Status</b></label>
                @Html.DropDownListFor(model => model.SiteStatusId, (SelectList)ViewBag.SiteStatus, "-- SELECT STATUS --", new { @class = "form-control" })
            </div>

            <div class="form-group mb-6">
                <label asp-for="Note" class="form-label fw-bold">Note</label>
                <input asp-for="Note" class="form-control" placeholder="Enter Note" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>

            <div class="form-group mb-6">
                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Master Masons</label>
                        @foreach (var item in (MultiSelectList)ViewBag.Name)
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="SelectedMasterMasonIds" value="@item.Value"
                                       @(Model.SelectedMasterMasonIds?.Contains(int.Parse(item.Value)) == true ? "checked" : "") />
                                <label class="form-check-label">@item.Text</label>
                            </div>
                        }
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-bold">Labours</label>
                        @foreach (var item in (MultiSelectList)ViewBag.Labours)
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="SelectedLabourIds" value="@item.Value"
                                       @(Model.SelectedLabourIds?.Contains(int.Parse(item.Value)) == true ? "checked" : "") />
                                <label class="form-check-label">@item.Text</label>
                            </div>
                        }
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Electricians</label>
                        @foreach (var item in (MultiSelectList)ViewBag.Electricians)
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="SelectedElectricianIds" value="@item.Value"
                                       @(Model.SelectedElectricianIds?.Contains(int.Parse(item.Value)) == true ? "checked" : "") />
                                <label class="form-check-label">@item.Text</label>
                            </div>
                        }
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-bold">Plumbers</label>
                        @foreach (var item in (MultiSelectList)ViewBag.Plumbers)
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="SelectedPlumberIds" value="@item.Value"
                                       @(Model.SelectedPlumberIds?.Contains(int.Parse(item.Value)) == true ? "checked" : "") />
                                <label class="form-check-label">@item.Text</label>
                            </div>
                        }
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Carpenters</label>
                        @foreach (var item in (MultiSelectList)ViewBag.Carpenters)
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="SelectedCarpenterIds" value="@item.Value"
                                       @(Model.SelectedCarpenterIds?.Contains(int.Parse(item.Value)) == true ? "checked" : "") />
                                <label class="form-check-label">@item.Text</label>
                            </div>
                        }
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-bold">Tilers</label>
                        @foreach (var item in (MultiSelectList)ViewBag.Tilers)
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="SelectedTilerIds" value="@item.Value"
                                       @(Model.SelectedTilerIds?.Contains(int.Parse(item.Value)) == true ? "checked" : "") />
                                <label class="form-check-label">@item.Text</label>
                            </div>
                        }
                    </div>
                </div>
            </div>


            <br />
            <button type="button" id="btnToggleAddressButton" class="btn btn-secondary" onclick="toggleAddressFields()">Tap for Address</button>

            <!-- Hidden Address Fields -->
            <div id="dvAddressFields" style="display: none;">
                <div class="form-group mb-6">
                    <label asp-for="AddressLine1" class="control-label"><b>Address</b></label>
                    <input asp-for="AddressLine1" class="form-control" />
                </div>
                <br />
                <div class="form-group mb-6">
                    <label asp-for="AddressTypeId"><b>Address Type</b></label>
                    @Html.DropDownListFor(model => model.AddressTypeId, (SelectList)ViewBag.AddressTypes, "-- Select --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AddressTypeId, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="form-group mb-6">
                    <label asp-for="CountryId"><b>Country Name</b></label>
                    @Html.DropDownListFor(model => model.CountryId, ViewBag.Countries as SelectList, "-- Select --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="form-group mb-6">
                    <label asp-for="PinCode" class="control-label"><b>Pin Code</b></label>
                    <input asp-for="PinCode" class="form-control" />
                </div>
                <br />
            </div>

            <div class="text-end">
                <button type="submit" class="btn btn-success fw-bold">Add</button>
            </div>
        </form>
    </div>
</div>

<script>
    function toggleAddressFields() {
        const addressFields = document.getElementById("dvAddressFields");
        const button = document.getElementById("btnToggleAddressButton");

        if (addressFields.style.display === "none") {
            addressFields.style.display = "block";
            button.textContent = "Tap to Hide Address";
        } else {
            addressFields.style.display = "none";
            button.textContent = "Tap for Address";
        }
    }
</script>