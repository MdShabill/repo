@model MaterialPurchaseVm

<h4>Material Purchase</h4>
<br />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Add">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <span class="text-danger"> <b> @ViewBag.errorMessage </b> </span>

            <div class="form-group" style="width: 60%;">
                <label asp-for="Date" class="control-label"><b>Date</b></label>
                <input asp-for="Date" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" type="datetime-local" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <label asp-for="SupplierId" class="control-label"><b>Supplier/Vendor</b></label>
                @Html.DropDownListFor(model => model.SupplierId, (SelectList)ViewBag.Supplier, "-- Select Supplier --", new { @class = "form-control" })
                <span asp-validation-for="SupplierId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <label asp-for="PhoneNumber" class="control-label"><b>Supplier Contact</b></label>
                <input asp-for="PhoneNumber" maxlength="10" minlength="10" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <label asp-for="BrandId" class="control-label"><b>Brands</b></label>
                @Html.DropDownListFor(model => model.BrandId, (SelectList)ViewBag.Brands, "-- Select Brand --", new { @class = "form-control" })
                <span asp-validation-for="BrandId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <label asp-for="MaterialId" class="control-label"><b>Materials</b></label>
                @Html.DropDownListFor(model => model.MaterialId, (SelectList)ViewBag.Materials, "-- Select Material --", new { @class = "form-control" })
                <span asp-validation-for="MaterialId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="UnitPrice" class="control-label"><b>Unit Price</b></label>
                        <div class="input-group">
                            <input asp-for="UnitPrice" id="unitPrice" class="form-control" readonly />
                            <span style="display: flex; align-items: center;">
                                <b id="unitOfMeasureText" style="display: none;">&nbsp; /</b>
                                <span id="unitOfMeasureDisplay" style="margin-left: 5px;">@Model?.UnitOfMeasure</span>
                            </span>
                            <input type="hidden" id="unitOfMeasure" name="UnitOfMeasure" value="@Model?.UnitOfMeasure" readonly />
                        </div>
                        <span asp-validation-for="UnitPrice" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="Quantity" class="control-label"><b>Quantity</b></label>
                        <input asp-for="Quantity" id="quantity" class="form-control" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="MaterialCost" class="control-label"><b>Material Cost</b></label>
                        <input asp-for="MaterialCost" id="materialCost" class="form-control" readonly />
                        <span asp-validation-for="MaterialCost" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group" style="width: 60%;">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="DeliveryCharge" class="control-label"><b>Delivery Cost</b></label>
                        <input asp-for="DeliveryCharge" id="deliveryCharge" class="form-control" />
                        <span asp-validation-for="DeliveryCharge" class="text-danger"></span>
                    </div>
                    <br />
                    <div class="col-md-6">
                        <label><b>Total Amount</b></label>
                        <input asp-for="TotalAmount" id="totalAmount" class="form-control" readonly />
                    </div>
                </div>
            </div>
            <br/>
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    // Function to calculate MaterialCost and update the field
    function updateMaterialCost() {
        var unitPrice = parseFloat(document.getElementById('unitPrice').value) || 0;
        var quantity = parseFloat(document.getElementById('quantity').value) || 0;

        var materialCost = unitPrice * quantity;
        document.getElementById('materialCost').value = materialCost.toFixed(2);
        updateTotalAmount();
    }
    // Function to calculate TotalAmount and update the field automatically when DeliveryCharge is provided
    function updateTotalAmount() {
        
        var materialCost = parseFloat(document.getElementById('materialCost').value) || 0;
        var deliveryCharge = parseFloat(document.getElementById('deliveryCharge').value) || 0;

        var totalAmount = materialCost + deliveryCharge;
        document.getElementById('totalAmount').value = totalAmount.toFixed(2);
    }
    document.getElementById('deliveryCharge').value = "0.00";

    document.getElementById('unitPrice').addEventListener('input', updateMaterialCost);
    document.getElementById('quantity').addEventListener('input', updateMaterialCost);
    document.getElementById('deliveryCharge').addEventListener('input', updateTotalAmount);

    $('#MaterialId').change(function (e) {
        
        var materialId = $('#MaterialId').val();

        if (materialId > 0) {
            $.ajax({
                url: '/MaterialPurchase/Add',
                type: 'GET',
                data: { id: materialId },
                success: function (response) {
                    // Update UnitOfMeasure and UnitPrice fields with the data from the server
                    $('#unitOfMeasureDisplay').text(response.unitOfMeasure);
                    $('#unitOfMeasure').val(response.unitOfMeasure);
                    $('#unitOfMeasureText').show();
                    $('#unitPrice').val(response.unitPrice);

                    // Trigger recalculation of MaterialCost
                    updateMaterialCost();
                }
            });
        } else {
            alert("Please select material first");
        }
    });
</script>